<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
       http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!--redis start -->
    <context:component-scan base-package="com.jzg.framework.cache"/>

    <!--统一到项目的context:property-placeholder中-->
    <context:property-placeholder location="classpath:conf/redis.properties" />

    <util:properties id="redisUtil" location="classpath:conf/redis.properties"/>

    <!-- 激活自动代理功能 -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:hostName="${redis.host}" p:port="${redis.port}" p:password="${redis.pass}"  p:poolConfig="jedisPoolConfig" />

    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory"   ref="connectionFactory" />
    </bean>




    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.maxIdle}" />
        <property name="maxTotal" value="${redis.maxTotal}" />
        <property name="maxWaitMillis" value="${redis.maxWaitMillis}" />
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />
        <property name="testOnReturn" value="${redis.testOnReturn}" />
        <property name="testWhileIdle" value="${redis.testWhileIdle}" />
    </bean>
    <!--集群分片配置-->
    <bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool"  scope="singleton">
        <constructor-arg index="0" ref="jedisPoolConfig" />
        <constructor-arg index="1">
            <list>
                <bean class="redis.clients.jedis.JedisShardInfo">
                    <constructor-arg name="host" value="${redis.host}" />
                    <constructor-arg name="port" value="${redis.port}" />
                    <constructor-arg name="timeout" value="${redis.timeout}" />
                    <constructor-arg name="password" value="${redis.password}" />
                </bean>
            </list>
        </constructor-arg>
    </bean>


    <bean name="redisCache" class="com.jzg.framework.cache.redis.RedisCacheProvider"></bean>

    <bean name="shareRedisCache" class="com.jzg.framework.cache.redis.ShareRedisCacheProvider"></bean>

    <bean id="redisPrefixAspect" class="com.jzg.framework.cache.redis.aop.RedisPrefixAspect"/>

    <aop:config>
        <aop:aspect id="myAop" ref="redisPrefixAspect">
            <aop:pointcut id="target" expression="execution(* com.jzg.framework.cache.redis.*.*(..))"/>
            <aop:around method="addPrefixAnnotation" pointcut-ref="target"/>
        </aop:aspect>
    </aop:config>
    <!--redis end -->
</beans>